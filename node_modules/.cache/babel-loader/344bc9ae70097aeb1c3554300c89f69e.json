{"ast":null,"code":"\"use strict\";\n\nfunction validUrl(e) {\n  return /http(s)?:\\/\\/(\\w+:?\\w*@)?(\\S+)(:\\d+)?((?<=\\.)\\w+)+(\\/([\\w#!:.?+=&%@!\\-/])*)?/gi.test(e);\n}\n\nfunction validTypeImage(e) {\n  return /(?<=\\S+)\\.(jpg|png|jpeg)/gi.test(e);\n}\n\nfunction base64ToNode(e) {\n  return e.toString(\"base64\");\n}\n\nfunction readFileAndConvert(e) {\n  var r = require(\"fs\"),\n      t = require(\"path\");\n\n  return r.statSync(e).isFile() ? base64ToNode(r.readFileSync(t.resolve(e)).toString(\"base64\")) : null;\n}\n\nfunction isImage(e) {\n  return validTypeImage(e) ? Promise.resolve(readFileAndConvert(e)) : Promise.reject(\"[*] Occurent some error... [validTypeImage] == false\");\n}\n\nfunction imageToBase64(e) {\n  return validUrl(e) ? require(\"node-fetch\")(e).then(function (e) {\n    return e.buffer();\n  }).then(base64ToNode) : isImage(e);\n}\n\nmodule.exports = imageToBase64;","map":{"version":3,"names":["validUrl","e","test","validTypeImage","base64ToNode","toString","readFileAndConvert","r","require","t","statSync","isFile","readFileSync","resolve","isImage","Promise","reject","imageToBase64","then","buffer","module","exports"],"sources":["/Users/nithyashree/Desktop/HackSC/node_modules/image-to-base64/image-to-base64.min.js"],"sourcesContent":["\"use strict\";function validUrl(e){return/http(s)?:\\/\\/(\\w+:?\\w*@)?(\\S+)(:\\d+)?((?<=\\.)\\w+)+(\\/([\\w#!:.?+=&%@!\\-/])*)?/gi.test(e)}function validTypeImage(e){return/(?<=\\S+)\\.(jpg|png|jpeg)/gi.test(e)}function base64ToNode(e){return e.toString(\"base64\")}function readFileAndConvert(e){var r=require(\"fs\"),t=require(\"path\");return r.statSync(e).isFile()?base64ToNode(r.readFileSync(t.resolve(e)).toString(\"base64\")):null}function isImage(e){return validTypeImage(e)?Promise.resolve(readFileAndConvert(e)):Promise.reject(\"[*] Occurent some error... [validTypeImage] == false\")}function imageToBase64(e){return validUrl(e)?require(\"node-fetch\")(e).then(function(e){return e.buffer()}).then(base64ToNode):isImage(e)}module.exports=imageToBase64;\r\n"],"mappings":"AAAA;;AAAa,SAASA,QAAT,CAAkBC,CAAlB,EAAoB;EAAC,OAAM,iFAAiFC,IAAjF,CAAsFD,CAAtF,CAAN;AAA+F;;AAAA,SAASE,cAAT,CAAwBF,CAAxB,EAA0B;EAAC,OAAM,6BAA6BC,IAA7B,CAAkCD,CAAlC,CAAN;AAA2C;;AAAA,SAASG,YAAT,CAAsBH,CAAtB,EAAwB;EAAC,OAAOA,CAAC,CAACI,QAAF,CAAW,QAAX,CAAP;AAA4B;;AAAA,SAASC,kBAAT,CAA4BL,CAA5B,EAA8B;EAAC,IAAIM,CAAC,GAACC,OAAO,CAAC,IAAD,CAAb;EAAA,IAAoBC,CAAC,GAACD,OAAO,CAAC,MAAD,CAA7B;;EAAsC,OAAOD,CAAC,CAACG,QAAF,CAAWT,CAAX,EAAcU,MAAd,KAAuBP,YAAY,CAACG,CAAC,CAACK,YAAF,CAAeH,CAAC,CAACI,OAAF,CAAUZ,CAAV,CAAf,EAA6BI,QAA7B,CAAsC,QAAtC,CAAD,CAAnC,GAAqF,IAA5F;AAAiG;;AAAA,SAASS,OAAT,CAAiBb,CAAjB,EAAmB;EAAC,OAAOE,cAAc,CAACF,CAAD,CAAd,GAAkBc,OAAO,CAACF,OAAR,CAAgBP,kBAAkB,CAACL,CAAD,CAAlC,CAAlB,GAAyDc,OAAO,CAACC,MAAR,CAAe,sDAAf,CAAhE;AAAuI;;AAAA,SAASC,aAAT,CAAuBhB,CAAvB,EAAyB;EAAC,OAAOD,QAAQ,CAACC,CAAD,CAAR,GAAYO,OAAO,CAAC,YAAD,CAAP,CAAsBP,CAAtB,EAAyBiB,IAAzB,CAA8B,UAASjB,CAAT,EAAW;IAAC,OAAOA,CAAC,CAACkB,MAAF,EAAP;EAAkB,CAA5D,EAA8DD,IAA9D,CAAmEd,YAAnE,CAAZ,GAA6FU,OAAO,CAACb,CAAD,CAA3G;AAA+G;;AAAAmB,MAAM,CAACC,OAAP,GAAeJ,aAAf"},"metadata":{},"sourceType":"script"}