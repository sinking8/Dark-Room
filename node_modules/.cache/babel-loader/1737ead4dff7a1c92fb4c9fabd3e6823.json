{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\n\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { getDisplayName, unstable_capitalize as capitalize, isPlainObject, deepmerge } from '@mui/utils';\nimport createTheme from './createTheme';\nimport propsToClassKey from './propsToClassKey';\nimport styleFunctionSx from './styleFunctionSx';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n} // https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\n\n\nfunction isStringTag(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n\n  return null;\n};\n\nconst transformVariants = variants => {\n  const variantsStyles = {};\n\n  if (variants) {\n    variants.forEach(definition => {\n      const key = propsToClassKey(definition.props);\n      variantsStyles[key] = definition.style;\n    });\n  }\n\n  return variantsStyles;\n};\n\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n\n  return transformVariants(variants);\n};\n\nconst variantsResolver = (props, styles, variants) => {\n  const {\n    ownerState = {}\n  } = props;\n  const variantsStyles = [];\n\n  if (variants) {\n    variants.forEach(variant => {\n      let isMatch = true;\n      Object.keys(variant.props).forEach(key => {\n        if (ownerState[key] !== variant.props[key] && props[key] !== variant.props[key]) {\n          isMatch = false;\n        }\n      });\n\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(variant.props)]);\n      }\n    });\n  }\n\n  return variantsStyles;\n};\n\nconst themeVariantsResolver = (props, styles, theme, name) => {\n  var _theme$components;\n\n  const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[name]) == null ? void 0 : _theme$components.variants;\n  return variantsResolver(props, styles, themeVariants);\n}; // Update /system/styled/#api in case if this changes\n\n\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\n\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\n\nfunction resolveTheme(_ref) {\n  let {\n    defaultTheme,\n    theme,\n    themeId\n  } = _ref;\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\n\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n\n  return (props, styles) => styles[slot];\n}\n\nconst muiStyledFunctionResolver = _ref2 => {\n  let {\n    styledArg,\n    props,\n    defaultTheme,\n    themeId\n  } = _ref2;\n  const resolvedStyles = styledArg(_extends({}, props, {\n    theme: resolveTheme(_extends({}, props, {\n      defaultTheme,\n      themeId\n    }))\n  }));\n  let optionalVariants;\n\n  if (resolvedStyles && resolvedStyles.variants) {\n    optionalVariants = resolvedStyles.variants;\n    delete resolvedStyles.variants;\n  }\n\n  if (optionalVariants) {\n    const variantsStyles = variantsResolver(props, transformVariants(optionalVariants), optionalVariants);\n    return [resolvedStyles, ...variantsStyles];\n  }\n\n  return resolvedStyles;\n};\n\nexport default function createStyled() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n\n  systemSx.__mui_systemSx = true;\n  return function (tag) {\n    let inputOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n    } = inputOptions,\n          options = _objectWithoutPropertiesLoose(inputOptions, _excluded); // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n\n\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n\n    let shouldForwardPropOption = shouldForwardProp; // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n\n    const muiStyledResolver = function (styleArg) {\n      for (var _len = arguments.length, expressions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        expressions[_key - 1] = arguments[_key];\n      }\n\n      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n        // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n        // component stays as a function. This condition makes sure that we do not interpolate functions\n        // which are basically components used as a selectors.\n        if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg) {\n          return props => muiStyledFunctionResolver({\n            styledArg: stylesArg,\n            props,\n            defaultTheme,\n            themeId\n          });\n        }\n\n        if (isPlainObject(stylesArg)) {\n          let transformedStylesArg = stylesArg;\n          let styledArgVariants;\n\n          if (stylesArg && stylesArg.variants) {\n            styledArgVariants = stylesArg.variants;\n            delete transformedStylesArg.variants;\n\n            transformedStylesArg = props => {\n              let result = stylesArg;\n              const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);\n              variantStyles.forEach(variantStyle => {\n                result = deepmerge(result, variantStyle);\n              });\n              return result;\n            };\n          }\n\n          return transformedStylesArg;\n        }\n\n        return stylesArg;\n      }) : [];\n      let transformedStyleArg = styleArg;\n\n      if (isPlainObject(styleArg)) {\n        let styledArgVariants;\n\n        if (styleArg && styleArg.variants) {\n          styledArgVariants = styleArg.variants;\n          delete transformedStyleArg.variants;\n\n          transformedStyleArg = props => {\n            let result = styleArg;\n            const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);\n            variantStyles.forEach(variantStyle => {\n              result = deepmerge(result, variantStyle);\n            });\n            return result;\n          };\n        }\n      } else if (typeof styleArg === 'function' && // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      styleArg.__emotion_real !== styleArg) {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = props => muiStyledFunctionResolver({\n          styledArg: styleArg,\n          props,\n          defaultTheme,\n          themeId\n        });\n      }\n\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const styleOverrides = getStyleOverrides(componentName, theme);\n\n          if (styleOverrides) {\n            const resolvedStyleOverrides = {};\n            Object.entries(styleOverrides).forEach(_ref3 => {\n              let [slotKey, slotStyle] = _ref3;\n              resolvedStyleOverrides[slotKey] = typeof slotStyle === 'function' ? slotStyle(_extends({}, props, {\n                theme\n              })) : slotStyle;\n            });\n            return overridesResolver(props, resolvedStyleOverrides);\n          }\n\n          return null;\n        });\n      }\n\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          return themeVariantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill(''); // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n\n        Component.displayName = displayName;\n      }\n\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n\n      return Component;\n    };\n\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n\n    return muiStyledResolver;\n  };\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","styledEngineStyled","internal_processStyles","processStyles","getDisplayName","unstable_capitalize","capitalize","isPlainObject","deepmerge","createTheme","propsToClassKey","styleFunctionSx","isEmpty","obj","Object","keys","length","isStringTag","tag","charCodeAt","getStyleOverrides","name","theme","components","styleOverrides","transformVariants","variants","variantsStyles","forEach","definition","key","props","style","getVariantStyles","variantsResolver","styles","ownerState","variant","isMatch","push","themeVariantsResolver","_theme$components","themeVariants","shouldForwardProp","prop","systemDefaultTheme","lowercaseFirstLetter","string","charAt","toLowerCase","slice","resolveTheme","defaultTheme","themeId","defaultOverridesResolver","slot","muiStyledFunctionResolver","styledArg","resolvedStyles","optionalVariants","createStyled","input","rootShouldForwardProp","slotShouldForwardProp","systemSx","__mui_systemSx","inputOptions","filter","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","options","undefined","label","process","env","NODE_ENV","shouldForwardPropOption","defaultStyledResolver","muiStyledResolver","styleArg","expressions","expressionsWithDefaultTheme","map","stylesArg","__emotion_real","transformedStylesArg","styledArgVariants","result","variantStyles","variantStyle","transformedStyleArg","resolvedStyleOverrides","entries","slotKey","slotStyle","numOfCustomFnsApplied","Array","isArray","placeholders","fill","raw","Component","displayName","muiName","withConfig"],"sources":["C:/Users/Ashwin/OneDrive/Desktop/New folder/frontend/HackSC/node_modules/@mui/system/esm/createStyled.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { getDisplayName, unstable_capitalize as capitalize, isPlainObject, deepmerge } from '@mui/utils';\nimport createTheme from './createTheme';\nimport propsToClassKey from './propsToClassKey';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n  return null;\n};\nconst transformVariants = variants => {\n  const variantsStyles = {};\n  if (variants) {\n    variants.forEach(definition => {\n      const key = propsToClassKey(definition.props);\n      variantsStyles[key] = definition.style;\n    });\n  }\n  return variantsStyles;\n};\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n  return transformVariants(variants);\n};\nconst variantsResolver = (props, styles, variants) => {\n  const {\n    ownerState = {}\n  } = props;\n  const variantsStyles = [];\n  if (variants) {\n    variants.forEach(variant => {\n      let isMatch = true;\n      Object.keys(variant.props).forEach(key => {\n        if (ownerState[key] !== variant.props[key] && props[key] !== variant.props[key]) {\n          isMatch = false;\n        }\n      });\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(variant.props)]);\n      }\n    });\n  }\n  return variantsStyles;\n};\nconst themeVariantsResolver = (props, styles, theme, name) => {\n  var _theme$components;\n  const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[name]) == null ? void 0 : _theme$components.variants;\n  return variantsResolver(props, styles, themeVariants);\n};\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nconst muiStyledFunctionResolver = ({\n  styledArg,\n  props,\n  defaultTheme,\n  themeId\n}) => {\n  const resolvedStyles = styledArg(_extends({}, props, {\n    theme: resolveTheme(_extends({}, props, {\n      defaultTheme,\n      themeId\n    }))\n  }));\n  let optionalVariants;\n  if (resolvedStyles && resolvedStyles.variants) {\n    optionalVariants = resolvedStyles.variants;\n    delete resolvedStyles.variants;\n  }\n  if (optionalVariants) {\n    const variantsStyles = variantsResolver(props, transformVariants(optionalVariants), optionalVariants);\n    return [resolvedStyles, ...variantsStyles];\n  }\n  return resolvedStyles;\n};\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n        // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n        // component stays as a function. This condition makes sure that we do not interpolate functions\n        // which are basically components used as a selectors.\n        if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg) {\n          return props => muiStyledFunctionResolver({\n            styledArg: stylesArg,\n            props,\n            defaultTheme,\n            themeId\n          });\n        }\n        if (isPlainObject(stylesArg)) {\n          let transformedStylesArg = stylesArg;\n          let styledArgVariants;\n          if (stylesArg && stylesArg.variants) {\n            styledArgVariants = stylesArg.variants;\n            delete transformedStylesArg.variants;\n            transformedStylesArg = props => {\n              let result = stylesArg;\n              const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);\n              variantStyles.forEach(variantStyle => {\n                result = deepmerge(result, variantStyle);\n              });\n              return result;\n            };\n          }\n          return transformedStylesArg;\n        }\n        return stylesArg;\n      }) : [];\n      let transformedStyleArg = styleArg;\n      if (isPlainObject(styleArg)) {\n        let styledArgVariants;\n        if (styleArg && styleArg.variants) {\n          styledArgVariants = styleArg.variants;\n          delete transformedStyleArg.variants;\n          transformedStyleArg = props => {\n            let result = styleArg;\n            const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);\n            variantStyles.forEach(variantStyle => {\n              result = deepmerge(result, variantStyle);\n            });\n            return result;\n          };\n        }\n      } else if (typeof styleArg === 'function' &&\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      styleArg.__emotion_real !== styleArg) {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = props => muiStyledFunctionResolver({\n          styledArg: styleArg,\n          props,\n          defaultTheme,\n          themeId\n        });\n      }\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const styleOverrides = getStyleOverrides(componentName, theme);\n          if (styleOverrides) {\n            const resolvedStyleOverrides = {};\n            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n              resolvedStyleOverrides[slotKey] = typeof slotStyle === 'function' ? slotStyle(_extends({}, props, {\n                theme\n              })) : slotStyle;\n            });\n            return overridesResolver(props, resolvedStyleOverrides);\n          }\n          return null;\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          return themeVariantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}