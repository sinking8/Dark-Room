{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\n\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\n\nexport default function deepmerge(target, source) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  const output = options.clone ? _extends({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}","map":{"version":3,"names":["_extends","isPlainObject","item","constructor","Object","deepClone","source","output","keys","forEach","key","deepmerge","target","options","clone"],"sources":["C:/Users/Ashwin/OneDrive/Desktop/New folder/frontend/HackSC/node_modules/@mui/utils/esm/deepmerge.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nexport default function deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? _extends({}, target) : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;EAClC,OAAOA,IAAI,KAAK,IAAT,IAAiB,OAAOA,IAAP,KAAgB,QAAjC,IAA6CA,IAAI,CAACC,WAAL,KAAqBC,MAAzE;AACD;;AACD,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;EACzB,IAAI,CAACL,aAAa,CAACK,MAAD,CAAlB,EAA4B;IAC1B,OAAOA,MAAP;EACD;;EACD,MAAMC,MAAM,GAAG,EAAf;EACAH,MAAM,CAACI,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4BC,GAAG,IAAI;IACjCH,MAAM,CAACG,GAAD,CAAN,GAAcL,SAAS,CAACC,MAAM,CAACI,GAAD,CAAP,CAAvB;EACD,CAFD;EAGA,OAAOH,MAAP;AACD;;AACD,eAAe,SAASI,SAAT,CAAmBC,MAAnB,EAA2BN,MAA3B,EAEZ;EAAA,IAF+CO,OAE/C,uEAFyD;IAC1DC,KAAK,EAAE;EADmD,CAEzD;EACD,MAAMP,MAAM,GAAGM,OAAO,CAACC,KAAR,GAAgBd,QAAQ,CAAC,EAAD,EAAKY,MAAL,CAAxB,GAAuCA,MAAtD;;EACA,IAAIX,aAAa,CAACW,MAAD,CAAb,IAAyBX,aAAa,CAACK,MAAD,CAA1C,EAAoD;IAClDF,MAAM,CAACI,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4BC,GAAG,IAAI;MACjC;MACA,IAAIA,GAAG,KAAK,WAAZ,EAAyB;QACvB;MACD;;MACD,IAAIT,aAAa,CAACK,MAAM,CAACI,GAAD,CAAP,CAAb,IAA8BA,GAAG,IAAIE,MAArC,IAA+CX,aAAa,CAACW,MAAM,CAACF,GAAD,CAAP,CAAhE,EAA+E;QAC7E;QACAH,MAAM,CAACG,GAAD,CAAN,GAAcC,SAAS,CAACC,MAAM,CAACF,GAAD,CAAP,EAAcJ,MAAM,CAACI,GAAD,CAApB,EAA2BG,OAA3B,CAAvB;MACD,CAHD,MAGO,IAAIA,OAAO,CAACC,KAAZ,EAAmB;QACxBP,MAAM,CAACG,GAAD,CAAN,GAAcT,aAAa,CAACK,MAAM,CAACI,GAAD,CAAP,CAAb,GAA6BL,SAAS,CAACC,MAAM,CAACI,GAAD,CAAP,CAAtC,GAAsDJ,MAAM,CAACI,GAAD,CAA1E;MACD,CAFM,MAEA;QACLH,MAAM,CAACG,GAAD,CAAN,GAAcJ,MAAM,CAACI,GAAD,CAApB;MACD;IACF,CAbD;EAcD;;EACD,OAAOH,MAAP;AACD"},"metadata":{},"sourceType":"module"}